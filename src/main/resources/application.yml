server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/security?serverTimezone=Asia/Seoul
    username: dong
    password: 1234
  devtools:
    remote:
      restart:
        enabled: true
#
#  mvc:
#    view:
#      prefix: /templates/
#      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: "449795455288-inr0o3r4hncmif7ehe2uk215ji8vgt4a.apps.googleusercontent.com"
            client-secret: "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"
            scope:
              - email
              - profile
          facebook:
            client-id: "1240337396557866"
            client-secret: "7db44d5465f4dbee750f95c8714a103e"
            scope:
              - email
              - public_profile
          # google, facebook은 공식 provider라서 간단.
          naver:
            client-id: "aOXHiY5aPEWeqSQaWeaO"
            client-secret: "eH_7tG5Twx"
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네이버 로그인 인증 요청
            token-uri: https://nid.naver.com/oauth2.0/token # 갱신토큰을 이용한 접근토큰 재발급 요청
            user-info-uri: https://openapi.naver.com/v1/nid/me # 프로필 정보 조회
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.


